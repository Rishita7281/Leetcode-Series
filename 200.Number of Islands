Solution of the problem number 200:- Number of Islands

class Solution {
public:
void check(vector<vector<char>>&grid,int i, int j, int mr,int mc){
    if(i<0||j<0||j>=mc||i>=mr||grid[i][j]=='0')return;grid[i][j]='0';
    check(grid,i+1,j,mr,mc);
    check(grid,i-1,j,mr,mc);
    check(grid,i,j+1,mr,mc);
    check(grid,i,j-1,mr,mc);
    return;
}
int numIslands(vector<vector<char>>& grid) {
        int count=0;
        for(int i=0;i<grid.size();i++){
        for(int j=0;j<grid[i].size();j++){
            if(grid[i][j]=='1'){
            count++;
            check(grid,i,j,grid.size(),grid[i].size());}
        }}
        return count;
    }
}; 

Explanation of the above code:-

This C++ code defines a class Solution with a public method numIslands. The purpose of this code is to find the number of islands in a 2D grid. An island is a group of '1's (representing land) connected horizontally or vertically. The function numIslands performs a depth-first search (DFS) to identify and count the number of islands.

Here's a step-by-step explanation of the code:

1-The check function is a recursive helper function used for DFS. It takes the 2D grid, current row index (i), current column index (j), total number of rows (mr), and total number of columns (mc) as parameters.
2-Inside the check function, it first checks whether the current position is out of bounds or if the grid value at the current position is '0'. If either condition is true, the function returns without further exploration.
3-If the current position is a '1', it marks the current position as visited by setting the grid value to '0'.
4-The function then recursively calls itself for the neighboring positions: down (i+1), up (i-1), right (j+1), and left (j-1). This recursive process explores the entire connected island.
5-The numIslands function initializes a variable count to 0. It then iterates through each cell of the input grid.
6-If the current cell contains a '1', it increments the count and calls the check function to mark and explore the entire island connected to that cell.
7-After processing all cells, the function returns the total count of islands.
